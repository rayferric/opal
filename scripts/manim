#!/usr/bin/env python3

import os, glob, sys, shutil

arg = sys.argv[1] if len(sys.argv) > 1 else ""

for src_file in glob.glob("./manim/src/*.py"):
    name = os.path.basename(src_file).replace(".py", "")
    if arg and arg not in name:
        continue

    out_name = name.replace("_", "-")
    human_readable_name = name.replace("_", " ").title()

    cmd = f"manim render --media_dir ./.cache/manim --quality m --output_file {out_name}.mp4 {src_file}"

    print(f"\nRendering {human_readable_name}...")
    print(f"$ {cmd}")
    os.system(cmd)

    # Find the audio and the rendered video.
    out_files = glob.glob(f"./.cache/manim/videos/*/*/{out_name}.mp4")

    if len(out_files) != 1:
        continue

    # Determine the duration of the video.
    cmd = f"ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 {out_files[0]}"
    print(f"$ {cmd}")
    duration = float(os.popen(cmd).read())

    # Mux background audio with the video.
    cmd = f"ffmpeg -y -i {out_files[0]} -i ./manim/cute-bass.mp3 -filter_complex '[1]afade=t=out:st={duration - 3}:d=3,atrim=0:{duration}' {out_files[0]}.mp4"
    print(f"$ {cmd}")
    os.system(cmd)

    # Replace the original video with the one with the audio loop.
    os.remove(out_files[0])
    os.rename(f"{out_files[0]}.mp4", out_files[0])

if os.path.exists("./build/manim"):
    shutil.rmtree("./build/manim")
os.makedirs("./build/manim", exist_ok=True)
for mp4 in glob.glob("./.cache/manim/videos/*/*/*.mp4"):
    print(f'\nPackaging "{mp4}"...')
    shutil.copy(mp4, "./build/manim/" + os.path.basename(mp4))
